---
name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  repository_dispatch:
    types: rebuild
  workflow_dispatch:
    inputs:
      git-ref:
        required: false

jobs:
  distros:
    name: "Container ${{ matrix.distro }}"
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        distro: [
          "alpine-3.12", "alpine-3.13",
          "archlinux",
          "centos-7", "centos-8",
          "debian-bullseye", "debian-buster", "debian-testing",
          "fedora-32", "fedora-33", "fedora-34", "fedora-35",
          # "gentoo--stage3",
          # OpenSUSE container works locally but hangs on GHA.
          # "opensuse--tumbleweed",
          "ubuntu-bionic", "ubuntu-focal", "ubuntu-groovy", "ubuntu-hirsute", "ubuntu-impish",
        ]
    steps:
      - name: "checkout"
        uses: "actions/checkout@v2"
      - name: "build container with CPython build dependencies for ${{ matrix.distro }}"
        run: |
           set -xe
           docker build . -f tests/Dockerfile.${{ matrix.distro }} -t builddep:${{ matrix.distro }}
      - name: "checkout CPython"
        uses: "actions/checkout@v2"
        with:
          repository: python/cpython
          path: cpython
          ref: main
      - name: "build CPython for ${{ matrix.distro }}"
        run: |
          set -xe
          docker run -v ${GITHUB_WORKSPACE}/cpython:/cpython builddep:${{ matrix.distro }} | tee result-${{ matrix.distro }}.txt
      - uses: actions/upload-artifact@v2
        with:
          name: result
          path: result-${{ matrix.distro }}.txt
          if-no-files-found: error

  syntaox:
    name: "Check syntax"
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
    steps:
      - name: "checkout"
        uses: "actions/checkout@v2"
      - name: "install dash and shellcheck"
        run: |
           set -e
           sudo apt update
           sudo apt install -y bash dash shellcheck
      - name: "check with dash"
        run: dash -n builddep.sh
      - name: "check with bash"
        run: bash -n builddep.sh
      - name: "check with shellcheck"
        run: shellcheck -x builddep.sh
