FROM docker.io/emscripten/emsdk:3.1.8

LABEL org.opencontainers.image.base.name="emscripten/emsdk"
LABEL org.opencontainers.image.authors="Christian Heimes"
LABEL org.opencontainers.image.url="https://github.com/tiran/cpython_builddep/"
LABEL org.opencontainers.image.title="CPython Emscripten & WASI dependencies"
LABEL org.opencontainers.image.description=""
LABEL org.opencontainers.image.usage="podman run --rm -ti -v .:/python-wasm/cpython:Z quay.io/tiran/cpythonbuild:emsdk3"

# install CPython build deps
COPY tests/entry.sh builddep.sh /
ENTRYPOINT ["/entry.sh"]
RUN ["/builddep.sh", "--update", "--extras", "--cleanup"]

# install extra emscripten ports, rebuild for shared
RUN embuilder build zlib bzip2
RUN embuilder build --pic zlib bzip2 libc-mt libdlmalloc-mt libsockets-mt libstubs libcompiler_rt libcompiler_rt-mt crtbegin libhtml5 libc++-mt-noexcept libc++abi-mt-noexcept libal libGL-mt libstubs-debug libc-mt-debug
# ws / websocket is required for socket support
RUN npm install --prefix /root ws websocket
RUN ln -rs /root/node_modules /root/.node_modules

# fix SELinux issue in shutil
COPY wasm/shutil-selinux.patch /tmp
RUN patch /usr/lib/python3.8/shutil.py /tmp/shutil-selinux.patch && \
    rm /tmp/*.patch

# extra dependencies
# autoconf + libtool is required to build libffi
RUN apt install -qy less vim apt autoconf automake libtool && apt clean

# WASI SDK
ENV WASI_VERSION=14
ENV WASI_SDK_PATH=/opt/wasi-sdk
RUN curl -L https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-${WASI_VERSION}/wasi-sdk-${WASI_VERSION}.0-linux.tar.gz | tar -xz -C /opt \
    && mv /opt/wasi-sdk-${WASI_VERSION}.0 ${WASI_SDK_PATH}

# wasmtime
RUN curl https://wasmtime.dev/install.sh -sSf | bash

# wasix POSIX stubs
COPY wasm/install*.sh /root
RUN /root/install-wasix.sh
RUN /root/install-libffi.sh

# pkg-config sysroot wrapper for WASI
COPY wasm/wasm32-unknown-wasi-pkg-config /opt/wasi-sdk/bin/

# python-wasm
RUN git clone --depth=1 https://github.com/ethanhs/python-wasm.git /python-wasm

# copy WASI build script
COPY wasm/build-python-wasi.sh /python-wasm/

ENV PYBUILDDEP_SRCDIR=/python-wasm/cpython
ENV CCACHE_DIR=/python-wasm/cpython/builddir/.ccache
VOLUME ["/python-wasm/cpython"]
WORKDIR /python-wasm

CMD ["/bin/bash"]
